{"version":3,"file":"static/js/884.64d15676.chunk.js","mappings":"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","sources":["MoviesApi/api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\nimport Notiflix from \"notiflix\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '4ede0e32802f72a2a7cd93fc07c87f24';\n\n\nexport async function fetchMovies(endPoint) {\n    const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}`\n    const {data} = await axios.get(url);\n    return data;\n};\n\nexport async function fetchSearchMovies(endPoint, query) {\n    const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}&query=${query}`\n    const { data } = await axios.get(url);\n    return data;\n};\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n    const url = `${BASE_URL}${endPoint}/${movieId}?api_key=${API_KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieCast(endPoint, movieId) {\n    const url = `${BASE_URL}${endPoint}/${movieId}/credits?api_key=${API_KEY}`\n    const {data} = await axios.get(url);\n    return data;\n};\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n    const url = `${BASE_URL}${endPoint}/${movieId}/reviews?api_key=${API_KEY}`\n    const {data} = await axios.get(url);\n    return data;\n};\n\nexport function onFetchError() {\n    Notiflix.Notify.failure('Oops! Something went wrong! Try reloading the page or make another choice!');\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </div>\n  );\n};\n","import { fetchMovieDetails, onFetchError } from 'MoviesApi/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst endPoint = '/movie';\nconst defaultImg =\n  'https://c8.alamy.com/compfr/g0xxkx/modele-de-conception-de-l-affiche-de-film-concept-vector-illustration-detaillee-g0xxkx.jpg';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState(null);\n  // const location = useLocation();\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    // if (!movieId) {\n    //   return;\n    // }\n\n    const getMoviesDetails = async () => {\n      try {\n        setLoading(true);\n        const { results } = await fetchMovieDetails(endPoint, movieId);\n        console.log(results);\n        setMovie(results);\n      } catch (error) {\n        onFetchError();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesDetails();\n  }, [movieId]);\n\n  // const handelBack = () => {\n  //   navigate(location.state ?? '/movies', { state: '' });\n  // };\n  // if (!movie) {\n  //   return;\n  // }\n\n  const {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    genres,\n    vote_average,\n    overview,\n  } = { movie };\n\n  return (\n    <>\n      {/* <button onClick={handelBack}>go back</button> */}\n      <h2>Movie details</h2>\n      {loading && <Loader />}\n      {movie && (\n        <div>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n            width={250}\n          />\n          <div>\n            {' '}\n            <h3>{original_title}</h3>\n            <p>\n              <b>Release date:</b> {release_date}\n            </p>\n            <p>\n              <b>Genres:</b>{' '}\n              {genres.map(({ name }) => `${name.toLowerCase()} | `)}\n            </p>\n            <p>\n              <b>Ranking:</b> {vote_average}\n            </p>\n            <p>\n              <b>Overview:</b> {overview}\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","fetchMovies","_x","_fetchMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","_yield$axios$get","data","_context","prev","next","concat","axios","sent","abrupt","stop","fetchSearchMovies","_x2","_x3","_fetchSearchMovies","_callee2","query","_yield$axios$get2","_context2","fetchMovieDetails","_x4","_x5","_fetchMovieDetails","_callee3","movieId","response","_context3","onFetchError","Notiflix","Loader","_jsx","className","css","children","ThreeCircles","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","movie","setMovie","useEffect","getMoviesDetails","_ref","_yield$fetchMovieDeta","results","console","log","t0","finish","_movie","poster_path","title","original_title","release_date","genres","vote_average","overview","_jsxs","_Fragment","src","alt","map","_ref2","name","toLowerCase"],"sourceRoot":""}